import processing.serial.*;
import java.awt.event.KeyEvent;
import java.io.IOException;

Serial myPort;
String angle = "";
String distance = "";
String data = "";
String noObject;
float pixsDistance;
int iAngle, iDistance;
int index1 = 0;
int index2 = 0;

void setup() {
  size(1200, 700);
  smooth();
  println(Serial.list()); // Use this to check your COM port
  myPort = new Serial(this, "COM3", 9600); // Update COM3 if needed!
  myPort.bufferUntil('.');
}

void draw() {
  fill(98, 245, 31);
  noStroke();
  fill(0, 4);
  rect(0, 0, width, height - height * 0.065);
  
  fill(98, 245, 31);
  drawRadar(); 
  drawLine();
  drawObject();
  drawText();
}

void serialEvent(Serial myPort) {
  data = myPort.readStringUntil('.');
  if (data != null) {
    data = data.trim(); // remove any whitespace
    index1 = data.indexOf(",");
    
    if (index1 > -1) {
      angle = data.substring(0, index1);
      distance = data.substring(index1 + 1);
      
      iAngle = int(angle);
      iDistance = int(distance);
    }
  }
}

void drawRadar() {
  pushMatrix();
  translate(width / 2, height - height * 0.074);
  noFill();
  strokeWeight(2);
  stroke(98, 245, 31);

  // Arc rings
  arc(0, 0, (width - width * 0.0625), (width - width * 0.0625), radians(45), radians(120));
  arc(0, 0, (width - width * 0.27), (width - width * 0.27), radians(45), radians(120));
  arc(0, 0, (width - width * 0.479), (width - width * 0.479), radians(45), radians(120));
  arc(0, 0, (width - width * 0.687), (width - width * 0.687), radians(45), radians(120));
  
  // Angle lines (45°, 60°, 90°, 120°)
  drawAngleLine(45);
  drawAngleLine(60);
  drawAngleLine(90);
  drawAngleLine(120);
  
  popMatrix();
}

void drawAngleLine(float angle) {
  float x = (-width / 2) * cos(radians(angle));
  float y = (-width / 2) * sin(radians(angle));
  line(0, 0, x, y);
}

void drawObject() {
  pushMatrix();
  translate(width / 2, height - height * 0.074);
  strokeWeight(9);
  stroke(255, 10, 10);
  
  pixsDistance = iDistance * ((height - height * 0.1666) * 0.025);
  
  if (iDistance < 40) {
    line(pixsDistance * cos(radians(iAngle)), -pixsDistance * sin(radians(iAngle)),
         (width - width * 0.505) * cos(radians(iAngle)), -(width - width * 0.505) * sin(radians(iAngle)));
  }
  
  popMatrix();
}

void drawLine() {
  pushMatrix();
  strokeWeight(9);
  stroke(30, 250, 60);
  translate(width / 2, height - height * 0.074);
  
  line(0, 0, (height - height * 0.12) * cos(radians(iAngle)),
       -(height - height * 0.12) * sin(radians(iAngle)));
  
  popMatrix();
}

void drawText() {
  pushMatrix();
  if (iDistance > 40) {
    noObject = "Out of Range";
  } else {
    noObject = "In Range";
  }

  fill(0, 0, 0);
  noStroke();
  rect(0, height - height * 0.0648, width, height);
  
  fill(98, 245, 31);
  textSize(25);
  
  text("10cm", width - width * 0.3854, height - height * 0.0833);
  text("20cm", width - width * 0.281, height - height * 0.0833);
  text("30cm", width - width * 0.177, height - height * 0.0833);
  text("40cm", width - width * 0.0729, height - height * 0.0833);
  
  textSize(40);
  text("Radar Scanner", width - width * 0.875, height - height * 0.0277);
  text("Angle: " + iAngle + " °", width - width * 0.48, height - height * 0.0277);
  text("Distance: " + iDistance + " cm", width - width * 0.26, height - height * 0.0277);
  
  textSize(25);
  fill(98, 245, 60);

  drawAngleLabel(45, "-45°");
  drawAngleLabel(60, "-60°");
  drawAngleLabel(90, "-90°");
  drawAngleLabel(120, "-120°");

  popMatrix();
}

void drawAngleLabel(float angle, String label) {
  pushMatrix();
  translate((width - width * 0.5) + width / 2 * cos(radians(angle)),
            (height - height * 0.09) - width / 2 * sin(radians(angle)));
  rotate(-radians(angle));
  text(label, 0, 0);
  popMatrix();
}
